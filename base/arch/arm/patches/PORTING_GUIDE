Porting Guide
=============

This guide shows the way how I'm doing the porting to new hardware and/or
kernel versions. It doesn't mean that this is the best way but maybe it gives
you a few ideas how to start with your own port. Any ideas to add or for
changes or productive criticism are very welcome!

Basically you'll have two possible ways:

- First way:
  Choose the newest kernel, make it ready for IPIPE and then do the RTAI port.
- Second way:
  Find an already running solution for an older kernel and for another
  board/processor/core and start there by following the next steps.



Steps:

1. Choose a linux kernel with Adeos/IPIPE/RTAI support for ARM

   You should prefer a kernel which supports your ARM core. Choose 2.6.7 for
   imx or 2.6.20 for at91 for example. If you have a board which is already
   supported you are finished. If your processor is supported you'd have to
   port that version to your board. If your ARM core is supported start with
   that kernel and port it to your processor.

   If the core is not supported you might want to choose the most current one
   which is already running with RTAI. At least you can be sure, that the
   chosen kernel is already working with RTAI.

2. First the board then RTAI

   If you have to do the port for your processor or core, you should start with
   downporting your board to the chosen kernel (In this step without RTAI).
   This could mean to downport to a very ancient kernel (2.6.20 in case of the
   at91). But you can be sure, that it'll work if you downport step by step.
   You can go through other kernel versions, too. Clean it up until patching
   with the Adeos/IPIPE patch runs without errors.

   In the end you'll have a kernel running on your board and which was tested
   and ported to RTAI before. You'll have an existing RTAI port for that kernel
   too for the next step.

3. Port the existing Adeos/IPIPE/RTAI support to your core/processor/board

   Use the existing RTAI patches in this step. Read the patches, try to
   understand what they are patching, divide them into the Adeos/IPIPE and RTAI
   parts. Following the previous steps, you'll have a running kernel for your
   board and you'll have RTAI patches to start with.

   Maybe you'll have to add support for your processor (RTAI configuration) and
   some other things to RTAI in this step too.

4. Port to a new kernel version

   If you succeeded in step 3 you can think of a port to a current kernel
   version. You'd start with a running RTAI on your board but with an ancient
   kernel. Choose newer kernels which already support RTAI before you choose
   the newest kernel but without support for RTAI.



This guide isn't finished! Especially step 3 'll be explained in much more
detail soon.



-------

T. Koschorrek <devel@koschorrek.com>
Copyright (C) 2012 Torsten Koschorrek
