ACLOCAL_AMFLAGS=-I config/autoconf

SUBDIRS = include nucleus arch skins testsuite scripts @RTAI_MAYBE_DOCDIR@ @RTAI_MAYBE_SIMDIR@ config

DIST_SUBDIRS = @RTAI_MAYBE_DOCDIR@ @RTAI_MAYBE_SIMDIR@ config

EXTRA_DIST = makefile

DISTCLEANFILES = .rtai_config .rtai_config.old .cfok .cfchanged

all-recursive install-recursive: nucleus/GNUmakefile clean-if-reconfigured

nucleus/GNUmakefile: @RTAI_LINUX_DIR@/.config
	@echo "*****************************************" ; \
	 echo "*  The Linux configuration has changed  *" ; \
	 echo "*  forcing 'make reconfig' ...          *" ; \
	 echo "*****************************************" ; \
	$(MAKE) reconfig

clean-if-reconfigured:
	@if test -r .cfchanged ; then \
	   rm -f .cfchanged ; \
	   echo "****************************************" ; \
	   echo "*  Your RTAI configuration has changed *" ; \
	   echo "*  forcing 'make clean' ...            *" ; \
	   echo "****************************************" ; \
	   $(MAKE) clean ; \
	fi

reconfig xconfig gconfig mconfig menuconfig config oldconfig:
	@$(MAKE) -f $(srcdir)/makefile $@ \
	srctree=$(srcdir) ARCH=@RTAI_HOST_STRING@ CROSS_COMPILE=@CROSS_COMPILE@

if CONFIG_RTAI_OLD_FASHIONED_BUILD
clean-local:
	rm -fr modules .cfchanged

distclean-local:
	$(MAKE) -C $(srcdir)/config/kconfig \
	-f Makefile.kconfig distclean srctree=$(srcdir)
	find . -name autom4te.cache | xargs rm -fr
else
clean-local:
	rm -f .cfchanged

distclean-local:
	test -d $(top_builddir)/config && \
	$(MAKE) -C $(top_builddir)/config/kconfig \
	-f @abs_srcdir@/config/kconfig/Makefile.kconfig distclean srctree=@abs_srcdir@
endif

install-data-local: .rtai_config
	$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)
	$(INSTALL_DATA) .rtai_config $(DESTDIR)$(pkgdatadir)/config-$(PACKAGE)-$(VERSION)

install-exec-local: devices

dist-hook:
	$(MAKE) -C $(distdir)/config/kconfig \
	-f Makefile.kconfig distclean srctree=$(distdir)
	rm -fr `find $(distdir) -name CVS`

dev devices:
	@if test x$(DESTDIR) = x; then \
	    if test \! "x`type -t sudo`" = x; then sudo=sudo; else sudo=; fi; \
	    for n in `seq 0 31`; do \
	       f="$(DESTDIR)/dev/dbridge$$n"; \
	       if test \! -c $$f; then \
	          $$sudo mknod -m 666 $$f c 150 $$n; \
	       fi; \
	    done ; \
	fi

.PHONY: reconfig xconfig gconfig mconfig menuconfig config oldconfig clean-if-reconfigured dev devices
