moduledir = $(DESTDIR)@RTAI_MODULE_DIR@

modext = @RTAI_MODULE_EXT@

CROSS_COMPILE = @CROSS_COMPILE@

libmodule_SRC = \
		heap.c \
		intr.c \
		module.c \
		pod.c \
		synch.c \
		thread.c \
		timer.c

if CONFIG_RTAI_OPT_FUSION
libmodule_SRC += shadow.c fusion.c
endif

if CONFIG_RTAI_OPT_PIPE
libmodule_SRC += pipe.c
endif

if CONFIG_LTT
libmodule_SRC += ltt.c
endif

if CONFIG_RTAI_OPT_CONFIG_GZ
libmodule_SRC += config.c

bin2c: $(top_srcdir)/config/kconfig/bin2c.c
	$(CC) -O2 -o $@ $<

config_data.h: $(top_builddir)/.rtai_config
	@(echo "static const char fusion_config_data[] = FUSION_MAGIC_START"; gzip -c $< | ./bin2c; echo "FUSION_MAGIC_END;") > $@

config_gz: bin2c config_data.h
else
config_gz:
endif

rtai_nucleus$(modext): @RTAI_KBUILD_ENV@
rtai_nucleus$(modext): $(libmodule_SRC) FORCE
	@RTAI_KBUILD_CMD@ fusion_extradef="@RTAI_KMOD_CFLAGS@"

all-local: config_gz rtai_nucleus$(modext)
if CONFIG_RTAI_OLD_FASHIONED_BUILD
	$(mkinstalldirs) $(top_srcdir)/modules
	$(INSTALL_DATA) rtai_nucleus$(modext) $(top_srcdir)/modules
endif

clean-local:
	@RTAI_KBUILD_CLEAN@

distclean-local:
	@RTAI_KBUILD_DISTCLEAN@
	@rm -f config_data.h

install-exec-local: rtai_nucleus$(modext)
	$(mkinstalldirs) $(moduledir)
	$(INSTALL_DATA) $< $(moduledir)

uninstall-local: 
	$(RM) $(moduledir)/rtai_nucleus$(modext)

devices:
if CONFIG_RTAI_OPT_UDEV
	if test -r $(DESTDIR)/etc/udev/udev.rules; then \
	   for f in $(srcdir)/udev/*.rules; do \
	   b=`basename $$f` ; \
	   grep -q fusion:`basename $$b .rules` $(DESTDIR)/etc/udev/udev.rules || \
	   $$sudo sh -c "( echo ; cat $$f ) >> $(DESTDIR)/etc/udev/udev.rules" ; \
	   done ; \
	fi
else
	$(mkinstalldirs) $(DESTDIR)/dev; \
	for n in `seq 0 @RTAI_PIPE_NRDEV@`; do \
	   f="$(DESTDIR)/dev/rtp$$n"; \
	   if test \! -c $$f; then \
	      $$sudo mknod -m 666 $$f c 150 $$n; \
	   fi; \
	done ; \
	if test \! -c $(DESTDIR)/dev/rtheap; then \
	  $$sudo mknod -m 666 $(DESTDIR)/dev/rtheap c 10 254; \
	fi
endif

if CONFIG_RTAI_OPT_UVM

lib_LIBRARIES = libnucleus.a

nodist_libnucleus_a_SOURCES = \
			heap.c \
			intr.c \
			module.c \
			pod.c \
			synch.c \
			thread.c \
			timer.c

libnucleus_a_CPPFLAGS = \
	@RTAI_USER_CFLAGS@ -D__RTAI_UVM__ \
	-I$(srcdir)/../include \
	-I$(srcdir)/../skins \
	-I../include

libnucleus_a_AR = $(CROSS_COMPILE)ar cru

endif

.PHONY: FORCE config_gz devices

EXTRA_DIST = $(libmodule_SRC) ltt.c Kbuild Kconfig udev
