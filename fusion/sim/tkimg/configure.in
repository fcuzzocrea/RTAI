AC_PREREQ(2.57)

AC_INIT(imgInit.c)

PACKAGE=Tkimg
MAJOR_VERSION=1
MINOR_VERSION=0
PATCHLEVEL="1.0"
VERSION=${MAJOR_VERSION}.${MINOR_VERSION}${PATCHLEVEL}
NODOT_VERSION=${MAJOR_VERSION}${MINOR_VERSION}
eval AC_DEFINE_UNQUOTED(VERSION, "${VERSION}")

SC_ENABLE_GCC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_CYGWIN
AC_OBJEXT
AC_EXEEXT
CYGPATH=echo

AC_CHECK_HEADERS(fcntl.h png.h)

AC_PATH_XREQUIRED()

SC_PUBLIC_TCL_HEADERS
SC_PATH_TCLCONFIG
SC_LOAD_TCLCONFIG
SC_PUBLIC_TK_HEADERS
SC_PATH_TKCONFIG
SC_LOAD_TKCONFIG
SC_ENABLE_THREADS
SC_ENABLE_SHARED

CFLAGS_DEBUG=${TCL_CFLAGS_DEBUG}
CFLAGS_OPTIMIZE=${TCL_CFLAGS_OPTIMIZE}
LDFLAGS_DEBUG=${TCL_LDFLAGS_DEBUG}
LDFLAGS_OPTIMIZE=${TCL_LDFLAGS_OPTIMIZE}

SHLIB_LD=${TCL_SHLIB_LD}
STLIB_LD=${TCL_STLIB_LD}
SHLIB_CFLAGS=${TCL_SHLIB_CFLAGS}

SC_ENABLE_SYMBOLS

if test "${SHARED_BUILD}" = "1" ; then
    CFLAGS='${CFLAGS_DEFAULT} ${CFLAGS_WARNING} ${SHLIB_CFLAGS}'
else
    CFLAGS='${CFLAGS_DEFAULT} ${CFLAGS_WARNING}'
fi

AC_DEFINE(USE_TCL_STUBS)

SC_MAKE_LIB

if test "${SHARED_BUILD}" = "1" ; then
    SHLIB_LD_LIBS="${TCL_STUB_LIB_SPEC}"
    eval "Tkimg_LIB_FILE=libTkimg${TCL_SHARED_LIB_SUFFIX}"
    RANLIB=:
  else
    eval "Tkimg_LIB_FILE=libTkimg${TCL_UNSHARED_LIB_SUFFIX}"
fi

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_SUBST(PATCHLEVEL)
AC_SUBST(CFLAGS_DEBUG)
AC_SUBST(CFLAGS_OPTIMIZE)
AC_SUBST(STLIB_LD)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(SHLIB_LDFLAGS)
AC_SUBST(Tkimg_LIB_FILE)
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(CYGPATH)

AC_OUTPUT(GNUmakefile pkgIndex.tcl)
