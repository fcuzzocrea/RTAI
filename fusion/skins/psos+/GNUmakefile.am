moduledir = $(DESTDIR)@RTAI_MODULE_DIR@
includedir = $(prefix)/include/psos+

modext = @RTAI_MODULE_EXT@

CROSS_COMPILE = @CROSS_COMPILE@

libmodule_SRC = \
	module.c \
	asr.c \
	event.c \
	pt.c \
	queue.c \
	rn.c \
	task.c \
	tm.c \
	sem.c

include_HEADERS = \
	psos.h

noinst_HEADERS = \
	asr.h \
	defs.h \
	event.h \
	pt.h \
	queue.h \
	rn.h \
	task.h \
	tm.h \
	sem.h

rtai_psos$(modext): @RTAI_KBUILD_ENV@
rtai_psos$(modext): $(libmodule_SRC) FORCE
	@RTAI_KBUILD_CMD@ fusion_extradef="@RTAI_KMOD_CFLAGS@"

clean-local:
	@RTAI_KBUILD_CLEAN@

distclean-local:
	@RTAI_KBUILD_DISTCLEAN@

all-local: rtai_psos$(modext)
if CONFIG_RTAI_OLD_FASHIONED_BUILD
	$(mkinstalldirs) $(top_srcdir)/modules
	$(INSTALL_DATA) $^ $(top_srcdir)/modules
endif

install-exec-local: rtai_psos$(modext)
	$(mkinstalldirs) $(moduledir)
	$(INSTALL_DATA) $< $(moduledir)

uninstall-local:
	$(RM) $(moduledir)/rtai_psos$(modext)

if CONFIG_RTAI_OPT_UVM

lib_LIBRARIES = libpsos.a

nodist_libpsos_a_SOURCES = \
	module.c \
	asr.c \
	event.c \
	pt.c \
	queue.c \
	rn.c \
	task.c \
	tm.c \
	sem.c

libpsos_a_CPPFLAGS = \
	@RTAI_USER_CFLAGS@ -D__RTAI_UVM__ \
	-I$(srcdir)/.. \
	-I$(top_srcdir)/include \
	-I../../include \
	-I@RTAI_LINUX_DIR@/include

libpsos_a_AR = $(CROSS_COMPILE)ar cru

endif

.PHONY: FORCE

EXTRA_DIST = $(libmodule_SRC) doc Kbuild Kconfig demos
