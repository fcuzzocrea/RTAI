config RTAI_SKIN_NATIVE
	bool "RTAI API"
	default y
	help

	The native RTAI API.

config RTAI_OPT_NATIVE_REGISTRY
	bool "Registry support"
	depends on RTAI_SKIN_NATIVE
	default y
	help
	
	The registry is used to bind real-time objects created by the
	RTAI skin to a symbolic name, so that they can be further
	retrieved and shared by real-time applications regardless of
	their runtime space (i.e. kernel or user). Each named object
	occupies a registry slot.

config RTAI_OPT_NATIVE_REGISTRY_NRSLOTS
	string "Number of registry slots"
	depends on RTAI_OPT_NATIVE_REGISTRY
	default 512
	help
	
	This option sets the maximum number of real-time objects the
	registry can handle.

config RTAI_OPT_NATIVE_PIPE
	bool "Message pipes"
	depends on RTAI_OPT_PIPE && RTAI_SKIN_NATIVE
	default y
	help
	
	Message pipes are bi-directional FIFO communication
	channels allowing data exchange between real-time tasks
	and regular user-space processes. Pipes natively preserve
	message boundaries, but can also be used in byte stream mode
	from kernel to user space.

	The maximum number of pipes available in the system can be
	configured using the RTAI_OPT_PIPE_NRDEV option from the
	Nucleus menu.

config RTAI_OPT_NATIVE_PIPE_BUFSZ
	string "Bytes in buffer space"
	depends on RTAI_OPT_NATIVE_PIPE
	default 4096
	help
	
	This option sets the memory size available for per-pipe
	buffering when message pipes are used in byte stream mode.

config RTAI_OPT_NATIVE_SEM
	bool "Counting semaphores"
	depends on RTAI_SKIN_NATIVE
	default y
	help
	
	Counting semaphore are synchronization objects granting RTAI
	tasks a concurrent access to a given number of resources
	maintained in an internal counter variable.

config RTAI_OPT_NATIVE_EVENT
	bool "Event flags"
	depends on RTAI_SKIN_NATIVE
	default y
	help
	
	Event flag groups are synchronization objects represented by a
	long-word structure; every available bit in such word can be used
	to map a user-defined event flag RTAI tasks can wait for.

config RTAI_OPT_NATIVE_MUTEX
	bool "Mutexes"
	depends on RTAI_SKIN_NATIVE
	default y if RTAI_OPT_NATIVE_COND=y
	help
	
	Mutexes are MUTual EXclusion objects, useful for protecting
	shared data structures from concurrent modifications, and
	implementing critical sections and monitors.

config RTAI_OPT_NATIVE_COND
	bool "Condition variables"
	depends on RTAI_SKIN_NATIVE
	enable RTAI_OPT_NATIVE_MUTEX
	help
	
	Condition variables are synchronization objects which
	allows RTAI tasks to suspend execution until some predicate on
	shared data is satisfied. 

config RTAI_OPT_NATIVE_QUEUE
	bool "Message queues"
	depends on RTAI_SKIN_NATIVE
	help
	
	Message queueing is a method by which real-time tasks can
	exchange or pass data through a RTAI-managed queue of
	messages. Messages can vary in length and be assigned
	different types or usages.

config RTAI_OPT_NATIVE_HEAP
	bool "Memory heaps"
	depends on RTAI_SKIN_NATIVE
	help

	Memory heaps are regions of memory used for dynamic memory
	allocation in a time-bounded fashion.

config RTAI_OPT_NATIVE_ALARM
	bool "Alarms"
	depends on RTAI_SKIN_NATIVE
	help
	
	Alarms are general watchdog timers allowing to run
	user-defined handlers after a specified delay has elapsed.
